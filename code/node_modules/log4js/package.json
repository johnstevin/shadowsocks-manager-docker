{
  "_args": [
    [
      {
        "raw": "log4js@^1.0.0",
        "scope": null,
        "escapedName": "log4js",
        "name": "log4js",
        "rawSpec": "^1.0.0",
        "spec": ">=1.0.0 <2.0.0",
        "type": "range"
      },
      "/root/.nvm/versions/node/v7.10.0/lib/node_modules/shadowsocks-manager"
    ]
  ],
  "_from": "log4js@>=1.0.0 <2.0.0",
  "_id": "log4js@1.1.1",
  "_inCache": true,
  "_location": "/shadowsocks-manager/log4js",
  "_nodeVersion": "6.9.4",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/log4js-1.1.1.tgz_1488423516669_0.827328409999609"
  },
  "_npmUser": {
    "name": "csausdev",
    "email": "gareth.nomiddlename@gmail.com"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "log4js@^1.0.0",
    "scope": null,
    "escapedName": "log4js",
    "name": "log4js",
    "rawSpec": "^1.0.0",
    "spec": ">=1.0.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/shadowsocks-manager"
  ],
  "_resolved": "https://registry.npmjs.org/log4js/-/log4js-1.1.1.tgz",
  "_shasum": "c21d29c7604089e4f255833e7f94b3461de1ff43",
  "_shrinkwrap": null,
  "_spec": "log4js@^1.0.0",
  "_where": "/root/.nvm/versions/node/v7.10.0/lib/node_modules/shadowsocks-manager",
  "author": {
    "name": "Gareth Jones",
    "email": "gareth.nomiddlename@gmail.com"
  },
  "browser": {
    "os": false
  },
  "bugs": {
    "url": "http://github.com/nomiddlename/log4js-node/issues"
  },
  "dependencies": {
    "debug": "^2.2.0",
    "semver": "^5.3.0",
    "streamroller": "^0.4.0"
  },
  "description": "Port of Log4js to work with node.",
  "devDependencies": {
    "jshint": "^2.9.2",
    "sandboxed-module": "0.1.3",
    "tape": "^4.6.2",
    "vows": "0.7.0"
  },
  "directories": {
    "test": "test",
    "lib": "lib"
  },
  "dist": {
    "shasum": "c21d29c7604089e4f255833e7f94b3461de1ff43",
    "tarball": "https://registry.npmjs.org/log4js/-/log4js-1.1.1.tgz"
  },
  "engines": {
    "node": ">=0.12"
  },
  "gitHead": "1fb4f2f8723e6837dc3269970841184684238f74",
  "homepage": "https://github.com/nomiddlename/log4js-node#readme",
  "keywords": [
    "logging",
    "log",
    "log4j",
    "node"
  ],
  "license": "Apache-2.0",
  "main": "./lib/log4js",
  "maintainers": [
    {
      "name": "csausdev",
      "email": "gareth.jones@sensis.com.au"
    }
  ],
  "name": "log4js",
  "optionalDependencies": {},
  "readme": "# log4js-node [![Build Status](https://secure.travis-ci.org/nomiddlename/log4js-node.png?branch=master)](http://travis-ci.org/nomiddlename/log4js-node)\n\n[![NPM](https://nodei.co/npm/log4js.png?downloads=true&downloadRank=true&stars=true)](https://nodei.co/npm/log4js/)\n\nThis is a conversion of the [log4js](https://github.com/stritti/log4js)\nframework to work with [node](http://nodejs.org). I've mainly stripped out the browser-specific code and tidied up some of the javascript.\n\nOut of the box it supports the following features:\n\n* coloured console logging to stdout or stderr\n* replacement of node's console.log functions (optional)\n* file appender, with configurable log rolling based on file size or date\n* SMTP appender\n* GELF appender\n* Loggly appender\n* Logstash UDP appender\n* logFaces appender\n* multiprocess appender (useful when you've got worker processes)\n* a logger for connect/express servers\n* configurable log message layout/patterns\n* different log levels for different log categories (make some parts of your app log as DEBUG, others only ERRORS, etc.)\n\n## Important changes in 1.0\n\nThe default appender has been changed from `console` to `stdout` - this alleviates a memory problem that happens when logging using console. If you're using log4js in a browser (via browserify), then you'll probably need to explicitly configure log4js to use the console appender now (unless browserify handles process.stdout).\n\nI'm also trying to move away from `vows` for the tests, and use `tape` instead. New tests should be added to `test/tape`, not the vows ones.\n\nlog4js also no longer supports node versions below 0.12.x.\n\nNOTE: from log4js 0.5 onwards you'll need to explicitly enable replacement of node's console.log functions. Do this either by calling `log4js.replaceConsole()` or configuring with an object or json file like this:\n\n```javascript\n{\n  appenders: [\n    { type: \"console\" }\n  ],\n  replaceConsole: true\n}\n```\n\n## installation\n\nnpm install log4js\n\n\n## usage\n\nMinimalist version:\n```javascript\nvar log4js = require('log4js');\nvar logger = log4js.getLogger();\nlogger.debug(\"Some debug messages\");\n```\nBy default, log4js outputs to stdout with the coloured layout (thanks to [masylum](http://github.com/masylum)), so for the above you would see:\n```bash\n[2010-01-17 11:43:37.987] [DEBUG] [default] - Some debug messages\n```\nSee example.js for a full example, but here's a snippet (also in fromreadme.js):\n```javascript\nvar log4js = require('log4js');\n//console log is loaded by default, so you won't normally need to do this\n//log4js.loadAppender('console');\nlog4js.loadAppender('file');\n//log4js.addAppender(log4js.appenders.console());\nlog4js.addAppender(log4js.appenders.file('logs/cheese.log'), 'cheese');\n\nvar logger = log4js.getLogger('cheese');\nlogger.setLevel('ERROR');\n\nlogger.trace('Entering cheese testing');\nlogger.debug('Got cheese.');\nlogger.info('Cheese is Gouda.');\nlogger.warn('Cheese is quite smelly.');\nlogger.error('Cheese is too ripe!');\nlogger.fatal('Cheese was breeding ground for listeria.');\n```\nOutput:\n```bash\n[2010-01-17 11:43:37.987] [ERROR] cheese - Cheese is too ripe!\n[2010-01-17 11:43:37.990] [FATAL] cheese - Cheese was breeding ground for listeria.\n```    \nThe first 5 lines of the code above could also be written as:\n```javascript\nvar log4js = require('log4js');\nlog4js.configure({\n  appenders: [\n    { type: 'console' },\n    { type: 'file', filename: 'logs/cheese.log', category: 'cheese' }\n  ]\n});\n```\n\n## configuration\n\nYou can configure the appenders and log levels manually (as above), or provide a\nconfiguration file (`log4js.configure('path/to/file.json')`), or a configuration object. The\nconfiguration file location may also be specified via the environment variable\nLOG4JS_CONFIG (`export LOG4JS_CONFIG=path/to/file.json`).\nAn example file can be found in `test/vows/log4js.json`. An example config file with log rolling is in `test/vows/with-log-rolling.json`.\nYou can configure log4js to check for configuration file changes at regular intervals, and if changed, reload. This allows changes to logging levels to occur without restarting the application.\n\nTo turn it on and specify a period:\n\n```javascript\nlog4js.configure('file.json', { reloadSecs: 300 });\n```\nFor FileAppender you can also pass the path to the log directory as an option where all your log files would be stored.\n\n```javascript\nlog4js.configure('my_log4js_configuration.json', { cwd: '/absolute/path/to/log/dir' });\n```\nIf you have already defined an absolute path for one of the FileAppenders in the configuration file, you could add a \"absolute\": true to the particular FileAppender to override the cwd option passed. Here is an example configuration file:\n\n#### my_log4js_configuration.json ####\n```json\n{\n  \"appenders\": [\n    {\n      \"type\": \"file\",\n      \"filename\": \"relative/path/to/log_file.log\",\n      \"maxLogSize\": 20480,\n      \"backups\": 3,\n      \"category\": \"relative-logger\"\n    },\n    {\n      \"type\": \"file\",\n      \"absolute\": true,\n      \"filename\": \"/absolute/path/to/log_file.log\",\n      \"maxLogSize\": 20480,\n      \"backups\": 10,\n      \"category\": \"absolute-logger\"          \n    }\n  ]\n}\n```    \nDocumentation for most of the core appenders can be found on the [wiki](https://github.com/nomiddlename/log4js-node/wiki/Appenders), otherwise take a look at the tests and the examples.\n\n## Documentation\nSee the [wiki](https://github.com/nomiddlename/log4js-node/wiki). Improve the [wiki](https://github.com/nomiddlename/log4js-node/wiki), please.\n\nThere's also [an example application](https://github.com/nomiddlename/log4js-example).\n\n## Contributing\nContributions welcome, but take a look at the [rules](https://github.com/nomiddlename/log4js-node/wiki/Contributing) first.\n\n## License\n\nThe original log4js was distributed under the Apache 2.0 License, and so is this. I've tried to\nkeep the original copyright and author credits in place, except in sections that I have rewritten\nextensively.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/nomiddlename/log4js-node.git"
  },
  "scripts": {
    "pretest": "jshint lib/ test/",
    "test": "tape 'test/tape/**/*.js' && vows test/vows/*.js"
  },
  "version": "1.1.1"
}
