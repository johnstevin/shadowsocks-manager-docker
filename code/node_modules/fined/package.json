{
  "_args": [
    [
      {
        "raw": "fined@^1.0.1",
        "scope": null,
        "escapedName": "fined",
        "name": "fined",
        "rawSpec": "^1.0.1",
        "spec": ">=1.0.1 <2.0.0",
        "type": "range"
      },
      "/root/.nvm/versions/node/v7.10.0/lib/node_modules/shadowsocks-manager/node_modules/liftoff"
    ]
  ],
  "_from": "fined@>=1.0.1 <2.0.0",
  "_id": "fined@1.0.2",
  "_inCache": true,
  "_location": "/shadowsocks-manager/fined",
  "_nodeVersion": "0.10.41",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/fined-1.0.2.tgz_1475705448430_0.6886874639894813"
  },
  "_npmUser": {
    "name": "phated",
    "email": "blaine.bublitz@gmail.com"
  },
  "_npmVersion": "2.15.2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "fined@^1.0.1",
    "scope": null,
    "escapedName": "fined",
    "name": "fined",
    "rawSpec": "^1.0.1",
    "spec": ">=1.0.1 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/shadowsocks-manager/liftoff"
  ],
  "_resolved": "https://registry.npmjs.org/fined/-/fined-1.0.2.tgz",
  "_shasum": "5b28424b760d7598960b7ef8480dff8ad3660e97",
  "_shrinkwrap": null,
  "_spec": "fined@^1.0.1",
  "_where": "/root/.nvm/versions/node/v7.10.0/lib/node_modules/shadowsocks-manager/node_modules/liftoff",
  "author": {
    "name": "JS CLI Team",
    "url": "https://github.com/js-cli"
  },
  "bugs": {
    "url": "https://github.com/js-cli/fined/issues"
  },
  "contributors": [
    {
      "name": "Takayuki Sato",
      "email": "t110000508260@yahoo.co.jp"
    },
    {
      "name": "Blaine Bublitz",
      "email": "blaine.bublitz@gmail.com"
    }
  ],
  "dependencies": {
    "expand-tilde": "^1.2.1",
    "lodash.assignwith": "^4.0.7",
    "lodash.isempty": "^4.2.1",
    "lodash.isplainobject": "^4.0.4",
    "lodash.isstring": "^4.0.1",
    "lodash.pick": "^4.2.1",
    "parse-filepath": "^1.0.1"
  },
  "description": "Find a file given a declaration of locations",
  "devDependencies": {
    "eslint": "^1.7.3",
    "eslint-config-gulp": "^2.0.0",
    "expect": "^1.19.0",
    "istanbul": "^0.4.3",
    "istanbul-coveralls": "^1.0.3",
    "jscs": "^2.3.5",
    "jscs-preset-gulp": "^1.0.0",
    "mocha": "^2.4.5"
  },
  "directories": {},
  "dist": {
    "shasum": "5b28424b760d7598960b7ef8480dff8ad3660e97",
    "tarball": "https://registry.npmjs.org/fined/-/fined-1.0.2.tgz"
  },
  "engines": {
    "node": ">= 0.10"
  },
  "files": [
    "index.js",
    "LICENSE"
  ],
  "gitHead": "850b8dde2e520878a7ff62b9a6b4a45c82d19889",
  "homepage": "https://github.com/js-cli/fined#readme",
  "keywords": [],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "phated",
      "email": "blaine.bublitz@gmail.com"
    }
  ],
  "name": "fined",
  "optionalDependencies": {},
  "readme": "# Fined [![Build Status][travis-image]][travis-url] [![Build Status][appveyor-image]][appveyor-url]\n\n> Find a file given a declaration of locations\n\n[![NPM](https://nodei.co/npm/fined.png)](https://nodei.co/npm/fined/)\n\n## Usage\n\n```js\nvar fined = require('fined');\n\nfined({ path: 'path/to/file', extensions: ['.js', '.json'] });\n// => { path: '/absolute/path/to/file.js', extension: '.js' }  (if file exists)\n// => null  (if file does not exist)\n\nvar opts = {\n  name: '.app',\n  cwd: '.',\n  extensions: {\n    'rc': 'default-rc-loader', \n    '.yml': 'default-yml-loader',\n  },\n};\n\nfined({ path: '.' }, opts);\n// => { path: '/absolute/of/cwd/.app.yml', extension: { '.yml': 'default-yml-loader' } }\n\nfined({ path: '~', extensions: { 'rc': 'some-special-rc-loader' } }, opts);\n// => { path: '/User/home/.apprc', extension: { 'rc': 'some-special-rc-loader' } }\n```\n\n## API\n\n### fined(pathObj, opts) => object | null\n\n#### Arguments:\n\n* **pathObj** [string | object] : a path setting for finding a file.\n* **opts** [object] : a plain object supplements `pathObj`.\n\n   `pathObj` and `opts` can have same properties:\n\n   * **path** [string] : a path string.\n   * **name** [string] : a basename.\n   * **extensions**: [string | array | object] : extensions.\n   * **cwd**: a base directory of `path` and for finding up.\n   * **findUp**: [boolean] : a flag to find up.\n\n#### Return:\n\nThis function returns a plain object which consists of following properties if a file exists otherwise null.\n\n   * **path** : an absolute path\n   * **extension** : a string or a plain object of extension.\n\n\n## License\n\nMIT\n\n\n[npm-image]: http://img.shields.io/badge/npm-v0.0.0-blue.svg\n[npm-url]: https://www.npmjs.org/package/fined\n[travis-image]: https://travis-ci.org/js-cli/fined.svg?branch=master\n[travis-url]: https://travis-ci.org/js-cli/fined\n[appveyor-image]: https://ci.appveyor.com/api/projects/status/github/js-cli/fined?branch=master&svg=true\n[appveyor-url]: https://ci.appveyor.com/project/js-cli/fined\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/js-cli/fined.git"
  },
  "scripts": {
    "cover": "istanbul cover _mocha --report lcovonly",
    "coveralls": "npm run cover && istanbul-coveralls",
    "lint": "eslint . && jscs index.js test/",
    "pretest": "npm run lint",
    "test": "mocha --async-only"
  },
  "version": "1.0.2"
}
